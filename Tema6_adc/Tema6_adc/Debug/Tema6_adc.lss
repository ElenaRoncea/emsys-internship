
Tema6_adc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000866  000008fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000866  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800104  00800104  000008fe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000095c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  0000099c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000098f  00000000  00000000  00000a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000719  00000000  00000000  000013a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003d5  00000000  00000000  00001abc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000128  00000000  00000000  00001e94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000413  00000000  00000000  00001fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000018c  00000000  00000000  000023cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  0000255b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 c8 00 	jmp	0x190	; 0x190 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 86 00 	jmp	0x10c	; 0x10c <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e6       	ldi	r30, 0x66	; 102
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e0       	ldi	r26, 0x04	; 4
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 31       	cpi	r26, 0x1C	; 28
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <main>
  9e:	0c 94 31 04 	jmp	0x862	; 0x862 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <port_init>:
	sei();
}

void port_init(void)
{
	DDRB  = 0xFF;
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	84 b9       	out	0x04, r24	; 4
	PORTB  = 0x00;
  aa:	15 b8       	out	0x05, r1	; 5

	DDRC  = 0x00;
  ac:	17 b8       	out	0x07, r1	; 7
	PORTC = 0x00;
  ae:	18 b8       	out	0x08, r1	; 8
  b0:	08 95       	ret

000000b2 <adc_init>:


void adc_init(void){
	
	//reset ADC registers
	ADMUX = 0x00;
  b2:	ac e7       	ldi	r26, 0x7C	; 124
  b4:	b0 e0       	ldi	r27, 0x00	; 0
  b6:	1c 92       	st	X, r1
	ADCSRA = 0x00;
  b8:	ea e7       	ldi	r30, 0x7A	; 122
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	10 82       	st	Z, r1
	
	//set the reference voltage to Avcc
	ADMUX |=  (1 << REFS0); // Set REFS0 bit to 1
  be:	8c 91       	ld	r24, X
  c0:	80 64       	ori	r24, 0x40	; 64
  c2:	8c 93       	st	X, r24
	ADMUX &= ~(1 << REFS1); // Set REFS1 bit to 0
  c4:	8c 91       	ld	r24, X
  c6:	8f 77       	andi	r24, 0x7F	; 127
  c8:	8c 93       	st	X, r24
	ADMUX &=  ~(1 << ADLAR); // Set ADLAR bit to 0(left adjust the result)
  ca:	8c 91       	ld	r24, X
  cc:	8f 7d       	andi	r24, 0xDF	; 223
  ce:	8c 93       	st	X, r24
	
	//disable analog comparator
	ACSR |= (1 << ACD); // Set ACD bit(from ACSR) to 1 to disable the Analog Comparator
  d0:	80 b7       	in	r24, 0x30	; 48
  d2:	80 68       	ori	r24, 0x80	; 128
  d4:	80 bf       	out	0x30, r24	; 48
	
	//Enable ADC interrupts
	ADCSRA |= (1 << ADIE);
  d6:	80 81       	ld	r24, Z
  d8:	88 60       	ori	r24, 0x08	; 8
  da:	80 83       	st	Z, r24
	sei();
  dc:	78 94       	sei
	
	//Set the prescaler
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (0 << ADPS0) ; //64
  de:	80 81       	ld	r24, Z
  e0:	86 60       	ori	r24, 0x06	; 6
  e2:	80 83       	st	Z, r24
	
	//Enable ADC
	ADCSRA |= (1 << ADEN); //Set ADEN bit to 1 to enable adc
  e4:	80 81       	ld	r24, Z
  e6:	80 68       	ori	r24, 0x80	; 128
  e8:	80 83       	st	Z, r24
	
	//start ADC conversion
	ADCSRA |= (1 << ADSC); // Set ADSC bit to 1 to start conversion
  ea:	80 81       	ld	r24, Z
  ec:	80 64       	ori	r24, 0x40	; 64
  ee:	80 83       	st	Z, r24
  f0:	08 95       	ret

000000f2 <init_devices>:
char buffer[20];

void init_devices(void)
{

	cli();
  f2:	f8 94       	cli

	port_init();
  f4:	0e 94 53 00 	call	0xa6	; 0xa6 <port_init>
	
	adc_init();
  f8:	0e 94 59 00 	call	0xb2	; 0xb2 <adc_init>
	
	sei();
  fc:	78 94       	sei
  fe:	08 95       	ret

00000100 <start_conversion>:
	//start ADC conversion
	ADCSRA |= (1 << ADSC); // Set ADSC bit to 1 to start conversion
}

void start_conversion(void){
	ADCSRA |= (1 << ADSC);
 100:	ea e7       	ldi	r30, 0x7A	; 122
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	80 64       	ori	r24, 0x40	; 64
 108:	80 83       	st	Z, r24
 10a:	08 95       	ret

0000010c <__vector_21>:
}


ISR(ADC_vect)
{
 10c:	1f 92       	push	r1
 10e:	0f 92       	push	r0
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	0f 92       	push	r0
 114:	11 24       	eor	r1, r1
 116:	2f 93       	push	r18
 118:	3f 93       	push	r19
 11a:	8f 93       	push	r24
 11c:	9f 93       	push	r25
	//get ADC value
	adcValue = ADCL;
 11e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 122:	28 2f       	mov	r18, r24
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	30 93 1b 01 	sts	0x011B, r19	; 0x80011b <adcValue+0x1>
 12a:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <adcValue>
	adcValue |= (uint16_t)ADCH<<8;
 12e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 132:	89 2f       	mov	r24, r25
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	98 2f       	mov	r25, r24
 138:	88 27       	eor	r24, r24
 13a:	82 2b       	or	r24, r18
 13c:	93 2b       	or	r25, r19
 13e:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <adcValue+0x1>
 142:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <adcValue>
	flag = 1; //conversion done
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
}
 14c:	9f 91       	pop	r25
 14e:	8f 91       	pop	r24
 150:	3f 91       	pop	r19
 152:	2f 91       	pop	r18
 154:	0f 90       	pop	r0
 156:	0f be       	out	0x3f, r0	; 63
 158:	0f 90       	pop	r0
 15a:	1f 90       	pop	r1
 15c:	18 95       	reti

0000015e <pinSet>:
		
	}
}

void pinSet(volatile uint8_t *port, uint8_t pin){
	*port |=  1 << pin;
 15e:	fc 01       	movw	r30, r24
 160:	40 81       	ld	r20, Z
 162:	21 e0       	ldi	r18, 0x01	; 1
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	02 c0       	rjmp	.+4      	; 0x16c <pinSet+0xe>
 168:	22 0f       	add	r18, r18
 16a:	33 1f       	adc	r19, r19
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <pinSet+0xa>
 170:	24 2b       	or	r18, r20
 172:	20 83       	st	Z, r18
 174:	08 95       	ret

00000176 <pinReset>:
}

void pinReset(volatile uint8_t *port, uint8_t pin){
 176:	fc 01       	movw	r30, r24
	*port &=  ~(1 << pin);
 178:	90 81       	ld	r25, Z
 17a:	21 e0       	ldi	r18, 0x01	; 1
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <pinReset+0xe>
 180:	22 0f       	add	r18, r18
 182:	33 1f       	adc	r19, r19
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <pinReset+0xa>
 188:	20 95       	com	r18
 18a:	29 23       	and	r18, r25
 18c:	20 83       	st	Z, r18
 18e:	08 95       	ret

00000190 <__vector_18>:
}



ISR(USART_RX_vect)
{
 190:	1f 92       	push	r1
 192:	0f 92       	push	r0
 194:	0f b6       	in	r0, 0x3f	; 63
 196:	0f 92       	push	r0
 198:	11 24       	eor	r1, r1
 19a:	8f 93       	push	r24
	
	 UDR0 = data;
 19c:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <data>
 1a0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 1a4:	8f 91       	pop	r24
 1a6:	0f 90       	pop	r0
 1a8:	0f be       	out	0x3f, r0	; 63
 1aa:	0f 90       	pop	r0
 1ac:	1f 90       	pop	r1
 1ae:	18 95       	reti

000001b0 <USART_Init>:


void USART_Init(unsigned int ubrr)
{
	//set baud rate
	UBRR0H = (unsigned char) (ubrr>>8);
 1b0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char) ubrr;
 1b4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	//activ doar sa transmita si sa primeasca
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
 1b8:	e1 ec       	ldi	r30, 0xC1	; 193
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	80 81       	ld	r24, Z
 1be:	88 61       	ori	r24, 0x18	; 24
 1c0:	80 83       	st	Z, r24
	
	//setez frame format : 8 data , 1 bit stop
	UCSR0C = (0<<USBS0)|(3<<UCSZ00);
 1c2:	86 e0       	ldi	r24, 0x06	; 6
 1c4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	sei();
 1c8:	78 94       	sei
 1ca:	08 95       	ret

000001cc <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
	//wait for empty transmit buffer
	while(!(UCSR0A & (1<<UDRE0)));
 1cc:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1d0:	95 ff       	sbrs	r25, 5
 1d2:	fc cf       	rjmp	.-8      	; 0x1cc <USART_Transmit>
	
	//put data into buffer, sends the data
	UDR0 = data;
 1d4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1d8:	08 95       	ret

000001da <USART_Transmit_string>:
}

void USART_Transmit_string(char *string)//functie care ia un sir de caractere si extrage cate un caracter pe rand, pana la terminarea sirului
{
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	ec 01       	movw	r28, r24
	while(*string!= 0x00)
 1e0:	03 c0       	rjmp	.+6      	; 0x1e8 <USART_Transmit_string+0xe>
	{
		USART_Transmit(*string);
 1e2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <USART_Transmit>
		string++;
 1e6:	21 96       	adiw	r28, 0x01	; 1
	UDR0 = data;
}

void USART_Transmit_string(char *string)//functie care ia un sir de caractere si extrage cate un caracter pe rand, pana la terminarea sirului
{
	while(*string!= 0x00)
 1e8:	88 81       	ld	r24, Y
 1ea:	81 11       	cpse	r24, r1
 1ec:	fa cf       	rjmp	.-12     	; 0x1e2 <USART_Transmit_string+0x8>
	{
		USART_Transmit(*string);
		string++;
	}
	
}
 1ee:	df 91       	pop	r29
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <main>:
}

int main(void)
{
	
	init_devices();
 1f4:	0e 94 79 00 	call	0xf2	; 0xf2 <init_devices>
	USART_Init(MYUBRR);
 1f8:	80 e1       	ldi	r24, 0x10	; 16
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <USART_Init>
	while(1)
	{
		if(flag == 1)
 200:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 204:	88 23       	and	r24, r24
 206:	e1 f3       	breq	.-8      	; 0x200 <main+0xc>
		{
			int voltage = ( adcValue * voltage_ref) / resValue; //conversion formula
 208:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <adcValue>
 20c:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <adcValue+0x1>
 210:	9c 01       	movw	r18, r24
 212:	22 0f       	add	r18, r18
 214:	33 1f       	adc	r19, r19
 216:	22 0f       	add	r18, r18
 218:	33 1f       	adc	r19, r19
 21a:	82 0f       	add	r24, r18
 21c:	93 1f       	adc	r25, r19
 21e:	c9 2f       	mov	r28, r25
 220:	c6 95       	lsr	r28
 222:	c6 95       	lsr	r28
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	d8 2f       	mov	r29, r24
			if(voltage < compValue)
 228:	c3 30       	cpi	r28, 0x03	; 3
 22a:	d1 05       	cpc	r29, r1
 22c:	5c f4       	brge	.+22     	; 0x244 <main+0x50>
			{
				pinSet(&PORT_LED0, PIN_LED0); //Turn on LED0
 22e:	64 e0       	ldi	r22, 0x04	; 4
 230:	8b e2       	ldi	r24, 0x2B	; 43
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 af 00 	call	0x15e	; 0x15e <pinSet>
				pinReset(&PORT_LED1, PIN_LED1); //Turn off LED1
 238:	65 e0       	ldi	r22, 0x05	; 5
 23a:	8b e2       	ldi	r24, 0x2B	; 43
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	0e 94 bb 00 	call	0x176	; 0x176 <pinReset>
 242:	0a c0       	rjmp	.+20     	; 0x258 <main+0x64>
			}
			else {
				pinSet(&PORT_LED1, PIN_LED1); //Turn on LED1
 244:	65 e0       	ldi	r22, 0x05	; 5
 246:	8b e2       	ldi	r24, 0x2B	; 43
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	0e 94 af 00 	call	0x15e	; 0x15e <pinSet>
				pinReset(&PORT_LED0, PIN_LED0); //Turn off LED0
 24e:	64 e0       	ldi	r22, 0x04	; 4
 250:	8b e2       	ldi	r24, 0x2B	; 43
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	0e 94 bb 00 	call	0x176	; 0x176 <pinReset>
			}
			sprintf(buffer, "%d ", voltage);
 258:	df 93       	push	r29
 25a:	cf 93       	push	r28
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	91 e0       	ldi	r25, 0x01	; 1
 260:	9f 93       	push	r25
 262:	8f 93       	push	r24
 264:	85 e0       	ldi	r24, 0x05	; 5
 266:	91 e0       	ldi	r25, 0x01	; 1
 268:	9f 93       	push	r25
 26a:	8f 93       	push	r24
 26c:	0e 94 47 01 	call	0x28e	; 0x28e <sprintf>
			USART_Transmit_string(buffer);
 270:	85 e0       	ldi	r24, 0x05	; 5
 272:	91 e0       	ldi	r25, 0x01	; 1
 274:	0e 94 ed 00 	call	0x1da	; 0x1da <USART_Transmit_string>
			flag = 0;
 278:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
			start_conversion();
 27c:	0e 94 80 00 	call	0x100	; 0x100 <start_conversion>
 280:	0f 90       	pop	r0
 282:	0f 90       	pop	r0
 284:	0f 90       	pop	r0
 286:	0f 90       	pop	r0
 288:	0f 90       	pop	r0
 28a:	0f 90       	pop	r0
 28c:	b9 cf       	rjmp	.-142    	; 0x200 <main+0xc>

0000028e <sprintf>:
 28e:	ae e0       	ldi	r26, 0x0E	; 14
 290:	b0 e0       	ldi	r27, 0x00	; 0
 292:	ed e4       	ldi	r30, 0x4D	; 77
 294:	f1 e0       	ldi	r31, 0x01	; 1
 296:	0c 94 08 04 	jmp	0x810	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 29a:	0d 89       	ldd	r16, Y+21	; 0x15
 29c:	1e 89       	ldd	r17, Y+22	; 0x16
 29e:	86 e0       	ldi	r24, 0x06	; 6
 2a0:	8c 83       	std	Y+4, r24	; 0x04
 2a2:	1a 83       	std	Y+2, r17	; 0x02
 2a4:	09 83       	std	Y+1, r16	; 0x01
 2a6:	8f ef       	ldi	r24, 0xFF	; 255
 2a8:	9f e7       	ldi	r25, 0x7F	; 127
 2aa:	9e 83       	std	Y+6, r25	; 0x06
 2ac:	8d 83       	std	Y+5, r24	; 0x05
 2ae:	ae 01       	movw	r20, r28
 2b0:	47 5e       	subi	r20, 0xE7	; 231
 2b2:	5f 4f       	sbci	r21, 0xFF	; 255
 2b4:	6f 89       	ldd	r22, Y+23	; 0x17
 2b6:	78 8d       	ldd	r23, Y+24	; 0x18
 2b8:	ce 01       	movw	r24, r28
 2ba:	01 96       	adiw	r24, 0x01	; 1
 2bc:	0e 94 69 01 	call	0x2d2	; 0x2d2 <vfprintf>
 2c0:	ef 81       	ldd	r30, Y+7	; 0x07
 2c2:	f8 85       	ldd	r31, Y+8	; 0x08
 2c4:	e0 0f       	add	r30, r16
 2c6:	f1 1f       	adc	r31, r17
 2c8:	10 82       	st	Z, r1
 2ca:	2e 96       	adiw	r28, 0x0e	; 14
 2cc:	e4 e0       	ldi	r30, 0x04	; 4
 2ce:	0c 94 24 04 	jmp	0x848	; 0x848 <__epilogue_restores__+0x1c>

000002d2 <vfprintf>:
 2d2:	ab e0       	ldi	r26, 0x0B	; 11
 2d4:	b0 e0       	ldi	r27, 0x00	; 0
 2d6:	ef e6       	ldi	r30, 0x6F	; 111
 2d8:	f1 e0       	ldi	r31, 0x01	; 1
 2da:	0c 94 fa 03 	jmp	0x7f4	; 0x7f4 <__prologue_saves__>
 2de:	6c 01       	movw	r12, r24
 2e0:	7b 01       	movw	r14, r22
 2e2:	8a 01       	movw	r16, r20
 2e4:	fc 01       	movw	r30, r24
 2e6:	17 82       	std	Z+7, r1	; 0x07
 2e8:	16 82       	std	Z+6, r1	; 0x06
 2ea:	83 81       	ldd	r24, Z+3	; 0x03
 2ec:	81 ff       	sbrs	r24, 1
 2ee:	cc c1       	rjmp	.+920    	; 0x688 <__EEPROM_REGION_LENGTH__+0x288>
 2f0:	ce 01       	movw	r24, r28
 2f2:	01 96       	adiw	r24, 0x01	; 1
 2f4:	3c 01       	movw	r6, r24
 2f6:	f6 01       	movw	r30, r12
 2f8:	93 81       	ldd	r25, Z+3	; 0x03
 2fa:	f7 01       	movw	r30, r14
 2fc:	93 fd       	sbrc	r25, 3
 2fe:	85 91       	lpm	r24, Z+
 300:	93 ff       	sbrs	r25, 3
 302:	81 91       	ld	r24, Z+
 304:	7f 01       	movw	r14, r30
 306:	88 23       	and	r24, r24
 308:	09 f4       	brne	.+2      	; 0x30c <vfprintf+0x3a>
 30a:	ba c1       	rjmp	.+884    	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 30c:	85 32       	cpi	r24, 0x25	; 37
 30e:	39 f4       	brne	.+14     	; 0x31e <vfprintf+0x4c>
 310:	93 fd       	sbrc	r25, 3
 312:	85 91       	lpm	r24, Z+
 314:	93 ff       	sbrs	r25, 3
 316:	81 91       	ld	r24, Z+
 318:	7f 01       	movw	r14, r30
 31a:	85 32       	cpi	r24, 0x25	; 37
 31c:	29 f4       	brne	.+10     	; 0x328 <vfprintf+0x56>
 31e:	b6 01       	movw	r22, r12
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 326:	e7 cf       	rjmp	.-50     	; 0x2f6 <vfprintf+0x24>
 328:	91 2c       	mov	r9, r1
 32a:	21 2c       	mov	r2, r1
 32c:	31 2c       	mov	r3, r1
 32e:	ff e1       	ldi	r31, 0x1F	; 31
 330:	f3 15       	cp	r31, r3
 332:	d8 f0       	brcs	.+54     	; 0x36a <vfprintf+0x98>
 334:	8b 32       	cpi	r24, 0x2B	; 43
 336:	79 f0       	breq	.+30     	; 0x356 <vfprintf+0x84>
 338:	38 f4       	brcc	.+14     	; 0x348 <vfprintf+0x76>
 33a:	80 32       	cpi	r24, 0x20	; 32
 33c:	79 f0       	breq	.+30     	; 0x35c <vfprintf+0x8a>
 33e:	83 32       	cpi	r24, 0x23	; 35
 340:	a1 f4       	brne	.+40     	; 0x36a <vfprintf+0x98>
 342:	23 2d       	mov	r18, r3
 344:	20 61       	ori	r18, 0x10	; 16
 346:	1d c0       	rjmp	.+58     	; 0x382 <vfprintf+0xb0>
 348:	8d 32       	cpi	r24, 0x2D	; 45
 34a:	61 f0       	breq	.+24     	; 0x364 <vfprintf+0x92>
 34c:	80 33       	cpi	r24, 0x30	; 48
 34e:	69 f4       	brne	.+26     	; 0x36a <vfprintf+0x98>
 350:	23 2d       	mov	r18, r3
 352:	21 60       	ori	r18, 0x01	; 1
 354:	16 c0       	rjmp	.+44     	; 0x382 <vfprintf+0xb0>
 356:	83 2d       	mov	r24, r3
 358:	82 60       	ori	r24, 0x02	; 2
 35a:	38 2e       	mov	r3, r24
 35c:	e3 2d       	mov	r30, r3
 35e:	e4 60       	ori	r30, 0x04	; 4
 360:	3e 2e       	mov	r3, r30
 362:	2a c0       	rjmp	.+84     	; 0x3b8 <vfprintf+0xe6>
 364:	f3 2d       	mov	r31, r3
 366:	f8 60       	ori	r31, 0x08	; 8
 368:	1d c0       	rjmp	.+58     	; 0x3a4 <vfprintf+0xd2>
 36a:	37 fc       	sbrc	r3, 7
 36c:	2d c0       	rjmp	.+90     	; 0x3c8 <vfprintf+0xf6>
 36e:	20 ed       	ldi	r18, 0xD0	; 208
 370:	28 0f       	add	r18, r24
 372:	2a 30       	cpi	r18, 0x0A	; 10
 374:	40 f0       	brcs	.+16     	; 0x386 <vfprintf+0xb4>
 376:	8e 32       	cpi	r24, 0x2E	; 46
 378:	b9 f4       	brne	.+46     	; 0x3a8 <vfprintf+0xd6>
 37a:	36 fc       	sbrc	r3, 6
 37c:	81 c1       	rjmp	.+770    	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 37e:	23 2d       	mov	r18, r3
 380:	20 64       	ori	r18, 0x40	; 64
 382:	32 2e       	mov	r3, r18
 384:	19 c0       	rjmp	.+50     	; 0x3b8 <vfprintf+0xe6>
 386:	36 fe       	sbrs	r3, 6
 388:	06 c0       	rjmp	.+12     	; 0x396 <vfprintf+0xc4>
 38a:	8a e0       	ldi	r24, 0x0A	; 10
 38c:	98 9e       	mul	r9, r24
 38e:	20 0d       	add	r18, r0
 390:	11 24       	eor	r1, r1
 392:	92 2e       	mov	r9, r18
 394:	11 c0       	rjmp	.+34     	; 0x3b8 <vfprintf+0xe6>
 396:	ea e0       	ldi	r30, 0x0A	; 10
 398:	2e 9e       	mul	r2, r30
 39a:	20 0d       	add	r18, r0
 39c:	11 24       	eor	r1, r1
 39e:	22 2e       	mov	r2, r18
 3a0:	f3 2d       	mov	r31, r3
 3a2:	f0 62       	ori	r31, 0x20	; 32
 3a4:	3f 2e       	mov	r3, r31
 3a6:	08 c0       	rjmp	.+16     	; 0x3b8 <vfprintf+0xe6>
 3a8:	8c 36       	cpi	r24, 0x6C	; 108
 3aa:	21 f4       	brne	.+8      	; 0x3b4 <vfprintf+0xe2>
 3ac:	83 2d       	mov	r24, r3
 3ae:	80 68       	ori	r24, 0x80	; 128
 3b0:	38 2e       	mov	r3, r24
 3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <vfprintf+0xe6>
 3b4:	88 36       	cpi	r24, 0x68	; 104
 3b6:	41 f4       	brne	.+16     	; 0x3c8 <vfprintf+0xf6>
 3b8:	f7 01       	movw	r30, r14
 3ba:	93 fd       	sbrc	r25, 3
 3bc:	85 91       	lpm	r24, Z+
 3be:	93 ff       	sbrs	r25, 3
 3c0:	81 91       	ld	r24, Z+
 3c2:	7f 01       	movw	r14, r30
 3c4:	81 11       	cpse	r24, r1
 3c6:	b3 cf       	rjmp	.-154    	; 0x32e <vfprintf+0x5c>
 3c8:	98 2f       	mov	r25, r24
 3ca:	9f 7d       	andi	r25, 0xDF	; 223
 3cc:	95 54       	subi	r25, 0x45	; 69
 3ce:	93 30       	cpi	r25, 0x03	; 3
 3d0:	28 f4       	brcc	.+10     	; 0x3dc <vfprintf+0x10a>
 3d2:	0c 5f       	subi	r16, 0xFC	; 252
 3d4:	1f 4f       	sbci	r17, 0xFF	; 255
 3d6:	9f e3       	ldi	r25, 0x3F	; 63
 3d8:	99 83       	std	Y+1, r25	; 0x01
 3da:	0d c0       	rjmp	.+26     	; 0x3f6 <vfprintf+0x124>
 3dc:	83 36       	cpi	r24, 0x63	; 99
 3de:	31 f0       	breq	.+12     	; 0x3ec <vfprintf+0x11a>
 3e0:	83 37       	cpi	r24, 0x73	; 115
 3e2:	71 f0       	breq	.+28     	; 0x400 <__EEPROM_REGION_LENGTH__>
 3e4:	83 35       	cpi	r24, 0x53	; 83
 3e6:	09 f0       	breq	.+2      	; 0x3ea <vfprintf+0x118>
 3e8:	59 c0       	rjmp	.+178    	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 3ea:	21 c0       	rjmp	.+66     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 3ec:	f8 01       	movw	r30, r16
 3ee:	80 81       	ld	r24, Z
 3f0:	89 83       	std	Y+1, r24	; 0x01
 3f2:	0e 5f       	subi	r16, 0xFE	; 254
 3f4:	1f 4f       	sbci	r17, 0xFF	; 255
 3f6:	88 24       	eor	r8, r8
 3f8:	83 94       	inc	r8
 3fa:	91 2c       	mov	r9, r1
 3fc:	53 01       	movw	r10, r6
 3fe:	13 c0       	rjmp	.+38     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 400:	28 01       	movw	r4, r16
 402:	f2 e0       	ldi	r31, 0x02	; 2
 404:	4f 0e       	add	r4, r31
 406:	51 1c       	adc	r5, r1
 408:	f8 01       	movw	r30, r16
 40a:	a0 80       	ld	r10, Z
 40c:	b1 80       	ldd	r11, Z+1	; 0x01
 40e:	36 fe       	sbrs	r3, 6
 410:	03 c0       	rjmp	.+6      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 412:	69 2d       	mov	r22, r9
 414:	70 e0       	ldi	r23, 0x00	; 0
 416:	02 c0       	rjmp	.+4      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 418:	6f ef       	ldi	r22, 0xFF	; 255
 41a:	7f ef       	ldi	r23, 0xFF	; 255
 41c:	c5 01       	movw	r24, r10
 41e:	0e 94 55 03 	call	0x6aa	; 0x6aa <strnlen>
 422:	4c 01       	movw	r8, r24
 424:	82 01       	movw	r16, r4
 426:	f3 2d       	mov	r31, r3
 428:	ff 77       	andi	r31, 0x7F	; 127
 42a:	3f 2e       	mov	r3, r31
 42c:	16 c0       	rjmp	.+44     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 42e:	28 01       	movw	r4, r16
 430:	22 e0       	ldi	r18, 0x02	; 2
 432:	42 0e       	add	r4, r18
 434:	51 1c       	adc	r5, r1
 436:	f8 01       	movw	r30, r16
 438:	a0 80       	ld	r10, Z
 43a:	b1 80       	ldd	r11, Z+1	; 0x01
 43c:	36 fe       	sbrs	r3, 6
 43e:	03 c0       	rjmp	.+6      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 440:	69 2d       	mov	r22, r9
 442:	70 e0       	ldi	r23, 0x00	; 0
 444:	02 c0       	rjmp	.+4      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 446:	6f ef       	ldi	r22, 0xFF	; 255
 448:	7f ef       	ldi	r23, 0xFF	; 255
 44a:	c5 01       	movw	r24, r10
 44c:	0e 94 4a 03 	call	0x694	; 0x694 <strnlen_P>
 450:	4c 01       	movw	r8, r24
 452:	f3 2d       	mov	r31, r3
 454:	f0 68       	ori	r31, 0x80	; 128
 456:	3f 2e       	mov	r3, r31
 458:	82 01       	movw	r16, r4
 45a:	33 fc       	sbrc	r3, 3
 45c:	1b c0       	rjmp	.+54     	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 45e:	82 2d       	mov	r24, r2
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	88 16       	cp	r8, r24
 464:	99 06       	cpc	r9, r25
 466:	b0 f4       	brcc	.+44     	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 468:	b6 01       	movw	r22, r12
 46a:	80 e2       	ldi	r24, 0x20	; 32
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 472:	2a 94       	dec	r2
 474:	f4 cf       	rjmp	.-24     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 476:	f5 01       	movw	r30, r10
 478:	37 fc       	sbrc	r3, 7
 47a:	85 91       	lpm	r24, Z+
 47c:	37 fe       	sbrs	r3, 7
 47e:	81 91       	ld	r24, Z+
 480:	5f 01       	movw	r10, r30
 482:	b6 01       	movw	r22, r12
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 48a:	21 10       	cpse	r2, r1
 48c:	2a 94       	dec	r2
 48e:	21 e0       	ldi	r18, 0x01	; 1
 490:	82 1a       	sub	r8, r18
 492:	91 08       	sbc	r9, r1
 494:	81 14       	cp	r8, r1
 496:	91 04       	cpc	r9, r1
 498:	71 f7       	brne	.-36     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 49a:	e8 c0       	rjmp	.+464    	; 0x66c <__EEPROM_REGION_LENGTH__+0x26c>
 49c:	84 36       	cpi	r24, 0x64	; 100
 49e:	11 f0       	breq	.+4      	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 4a0:	89 36       	cpi	r24, 0x69	; 105
 4a2:	41 f5       	brne	.+80     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 4a4:	f8 01       	movw	r30, r16
 4a6:	37 fe       	sbrs	r3, 7
 4a8:	07 c0       	rjmp	.+14     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 4aa:	60 81       	ld	r22, Z
 4ac:	71 81       	ldd	r23, Z+1	; 0x01
 4ae:	82 81       	ldd	r24, Z+2	; 0x02
 4b0:	93 81       	ldd	r25, Z+3	; 0x03
 4b2:	0c 5f       	subi	r16, 0xFC	; 252
 4b4:	1f 4f       	sbci	r17, 0xFF	; 255
 4b6:	08 c0       	rjmp	.+16     	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 4b8:	60 81       	ld	r22, Z
 4ba:	71 81       	ldd	r23, Z+1	; 0x01
 4bc:	07 2e       	mov	r0, r23
 4be:	00 0c       	add	r0, r0
 4c0:	88 0b       	sbc	r24, r24
 4c2:	99 0b       	sbc	r25, r25
 4c4:	0e 5f       	subi	r16, 0xFE	; 254
 4c6:	1f 4f       	sbci	r17, 0xFF	; 255
 4c8:	f3 2d       	mov	r31, r3
 4ca:	ff 76       	andi	r31, 0x6F	; 111
 4cc:	3f 2e       	mov	r3, r31
 4ce:	97 ff       	sbrs	r25, 7
 4d0:	09 c0       	rjmp	.+18     	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 4d2:	90 95       	com	r25
 4d4:	80 95       	com	r24
 4d6:	70 95       	com	r23
 4d8:	61 95       	neg	r22
 4da:	7f 4f       	sbci	r23, 0xFF	; 255
 4dc:	8f 4f       	sbci	r24, 0xFF	; 255
 4de:	9f 4f       	sbci	r25, 0xFF	; 255
 4e0:	f0 68       	ori	r31, 0x80	; 128
 4e2:	3f 2e       	mov	r3, r31
 4e4:	2a e0       	ldi	r18, 0x0A	; 10
 4e6:	30 e0       	ldi	r19, 0x00	; 0
 4e8:	a3 01       	movw	r20, r6
 4ea:	0e 94 9c 03 	call	0x738	; 0x738 <__ultoa_invert>
 4ee:	88 2e       	mov	r8, r24
 4f0:	86 18       	sub	r8, r6
 4f2:	45 c0       	rjmp	.+138    	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 4f4:	85 37       	cpi	r24, 0x75	; 117
 4f6:	31 f4       	brne	.+12     	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
 4f8:	23 2d       	mov	r18, r3
 4fa:	2f 7e       	andi	r18, 0xEF	; 239
 4fc:	b2 2e       	mov	r11, r18
 4fe:	2a e0       	ldi	r18, 0x0A	; 10
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	25 c0       	rjmp	.+74     	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
 504:	93 2d       	mov	r25, r3
 506:	99 7f       	andi	r25, 0xF9	; 249
 508:	b9 2e       	mov	r11, r25
 50a:	8f 36       	cpi	r24, 0x6F	; 111
 50c:	c1 f0       	breq	.+48     	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
 50e:	18 f4       	brcc	.+6      	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
 510:	88 35       	cpi	r24, 0x58	; 88
 512:	79 f0       	breq	.+30     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 514:	b5 c0       	rjmp	.+362    	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 516:	80 37       	cpi	r24, 0x70	; 112
 518:	19 f0       	breq	.+6      	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
 51a:	88 37       	cpi	r24, 0x78	; 120
 51c:	21 f0       	breq	.+8      	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 51e:	b0 c0       	rjmp	.+352    	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 520:	e9 2f       	mov	r30, r25
 522:	e0 61       	ori	r30, 0x10	; 16
 524:	be 2e       	mov	r11, r30
 526:	b4 fe       	sbrs	r11, 4
 528:	0d c0       	rjmp	.+26     	; 0x544 <__EEPROM_REGION_LENGTH__+0x144>
 52a:	fb 2d       	mov	r31, r11
 52c:	f4 60       	ori	r31, 0x04	; 4
 52e:	bf 2e       	mov	r11, r31
 530:	09 c0       	rjmp	.+18     	; 0x544 <__EEPROM_REGION_LENGTH__+0x144>
 532:	34 fe       	sbrs	r3, 4
 534:	0a c0       	rjmp	.+20     	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 536:	29 2f       	mov	r18, r25
 538:	26 60       	ori	r18, 0x06	; 6
 53a:	b2 2e       	mov	r11, r18
 53c:	06 c0       	rjmp	.+12     	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 53e:	28 e0       	ldi	r18, 0x08	; 8
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	05 c0       	rjmp	.+10     	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
 544:	20 e1       	ldi	r18, 0x10	; 16
 546:	30 e0       	ldi	r19, 0x00	; 0
 548:	02 c0       	rjmp	.+4      	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
 54a:	20 e1       	ldi	r18, 0x10	; 16
 54c:	32 e0       	ldi	r19, 0x02	; 2
 54e:	f8 01       	movw	r30, r16
 550:	b7 fe       	sbrs	r11, 7
 552:	07 c0       	rjmp	.+14     	; 0x562 <__EEPROM_REGION_LENGTH__+0x162>
 554:	60 81       	ld	r22, Z
 556:	71 81       	ldd	r23, Z+1	; 0x01
 558:	82 81       	ldd	r24, Z+2	; 0x02
 55a:	93 81       	ldd	r25, Z+3	; 0x03
 55c:	0c 5f       	subi	r16, 0xFC	; 252
 55e:	1f 4f       	sbci	r17, 0xFF	; 255
 560:	06 c0       	rjmp	.+12     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 562:	60 81       	ld	r22, Z
 564:	71 81       	ldd	r23, Z+1	; 0x01
 566:	80 e0       	ldi	r24, 0x00	; 0
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	0e 5f       	subi	r16, 0xFE	; 254
 56c:	1f 4f       	sbci	r17, 0xFF	; 255
 56e:	a3 01       	movw	r20, r6
 570:	0e 94 9c 03 	call	0x738	; 0x738 <__ultoa_invert>
 574:	88 2e       	mov	r8, r24
 576:	86 18       	sub	r8, r6
 578:	fb 2d       	mov	r31, r11
 57a:	ff 77       	andi	r31, 0x7F	; 127
 57c:	3f 2e       	mov	r3, r31
 57e:	36 fe       	sbrs	r3, 6
 580:	0d c0       	rjmp	.+26     	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 582:	23 2d       	mov	r18, r3
 584:	2e 7f       	andi	r18, 0xFE	; 254
 586:	a2 2e       	mov	r10, r18
 588:	89 14       	cp	r8, r9
 58a:	58 f4       	brcc	.+22     	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 58c:	34 fe       	sbrs	r3, 4
 58e:	0b c0       	rjmp	.+22     	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 590:	32 fc       	sbrc	r3, 2
 592:	09 c0       	rjmp	.+18     	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 594:	83 2d       	mov	r24, r3
 596:	8e 7e       	andi	r24, 0xEE	; 238
 598:	a8 2e       	mov	r10, r24
 59a:	05 c0       	rjmp	.+10     	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 59c:	b8 2c       	mov	r11, r8
 59e:	a3 2c       	mov	r10, r3
 5a0:	03 c0       	rjmp	.+6      	; 0x5a8 <__EEPROM_REGION_LENGTH__+0x1a8>
 5a2:	b8 2c       	mov	r11, r8
 5a4:	01 c0       	rjmp	.+2      	; 0x5a8 <__EEPROM_REGION_LENGTH__+0x1a8>
 5a6:	b9 2c       	mov	r11, r9
 5a8:	a4 fe       	sbrs	r10, 4
 5aa:	0f c0       	rjmp	.+30     	; 0x5ca <__EEPROM_REGION_LENGTH__+0x1ca>
 5ac:	fe 01       	movw	r30, r28
 5ae:	e8 0d       	add	r30, r8
 5b0:	f1 1d       	adc	r31, r1
 5b2:	80 81       	ld	r24, Z
 5b4:	80 33       	cpi	r24, 0x30	; 48
 5b6:	21 f4       	brne	.+8      	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 5b8:	9a 2d       	mov	r25, r10
 5ba:	99 7e       	andi	r25, 0xE9	; 233
 5bc:	a9 2e       	mov	r10, r25
 5be:	09 c0       	rjmp	.+18     	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 5c0:	a2 fe       	sbrs	r10, 2
 5c2:	06 c0       	rjmp	.+12     	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 5c4:	b3 94       	inc	r11
 5c6:	b3 94       	inc	r11
 5c8:	04 c0       	rjmp	.+8      	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 5ca:	8a 2d       	mov	r24, r10
 5cc:	86 78       	andi	r24, 0x86	; 134
 5ce:	09 f0       	breq	.+2      	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 5d0:	b3 94       	inc	r11
 5d2:	a3 fc       	sbrc	r10, 3
 5d4:	11 c0       	rjmp	.+34     	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 5d6:	a0 fe       	sbrs	r10, 0
 5d8:	06 c0       	rjmp	.+12     	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5da:	b2 14       	cp	r11, r2
 5dc:	88 f4       	brcc	.+34     	; 0x600 <__EEPROM_REGION_LENGTH__+0x200>
 5de:	28 0c       	add	r2, r8
 5e0:	92 2c       	mov	r9, r2
 5e2:	9b 18       	sub	r9, r11
 5e4:	0e c0       	rjmp	.+28     	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
 5e6:	b2 14       	cp	r11, r2
 5e8:	60 f4       	brcc	.+24     	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
 5ea:	b6 01       	movw	r22, r12
 5ec:	80 e2       	ldi	r24, 0x20	; 32
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 5f4:	b3 94       	inc	r11
 5f6:	f7 cf       	rjmp	.-18     	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5f8:	b2 14       	cp	r11, r2
 5fa:	18 f4       	brcc	.+6      	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
 5fc:	2b 18       	sub	r2, r11
 5fe:	02 c0       	rjmp	.+4      	; 0x604 <__EEPROM_REGION_LENGTH__+0x204>
 600:	98 2c       	mov	r9, r8
 602:	21 2c       	mov	r2, r1
 604:	a4 fe       	sbrs	r10, 4
 606:	10 c0       	rjmp	.+32     	; 0x628 <__EEPROM_REGION_LENGTH__+0x228>
 608:	b6 01       	movw	r22, r12
 60a:	80 e3       	ldi	r24, 0x30	; 48
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 612:	a2 fe       	sbrs	r10, 2
 614:	17 c0       	rjmp	.+46     	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
 616:	a1 fc       	sbrc	r10, 1
 618:	03 c0       	rjmp	.+6      	; 0x620 <__EEPROM_REGION_LENGTH__+0x220>
 61a:	88 e7       	ldi	r24, 0x78	; 120
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	02 c0       	rjmp	.+4      	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 620:	88 e5       	ldi	r24, 0x58	; 88
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	b6 01       	movw	r22, r12
 626:	0c c0       	rjmp	.+24     	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
 628:	8a 2d       	mov	r24, r10
 62a:	86 78       	andi	r24, 0x86	; 134
 62c:	59 f0       	breq	.+22     	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
 62e:	a1 fe       	sbrs	r10, 1
 630:	02 c0       	rjmp	.+4      	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
 632:	8b e2       	ldi	r24, 0x2B	; 43
 634:	01 c0       	rjmp	.+2      	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
 636:	80 e2       	ldi	r24, 0x20	; 32
 638:	a7 fc       	sbrc	r10, 7
 63a:	8d e2       	ldi	r24, 0x2D	; 45
 63c:	b6 01       	movw	r22, r12
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 644:	89 14       	cp	r8, r9
 646:	38 f4       	brcc	.+14     	; 0x656 <__EEPROM_REGION_LENGTH__+0x256>
 648:	b6 01       	movw	r22, r12
 64a:	80 e3       	ldi	r24, 0x30	; 48
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 652:	9a 94       	dec	r9
 654:	f7 cf       	rjmp	.-18     	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
 656:	8a 94       	dec	r8
 658:	f3 01       	movw	r30, r6
 65a:	e8 0d       	add	r30, r8
 65c:	f1 1d       	adc	r31, r1
 65e:	80 81       	ld	r24, Z
 660:	b6 01       	movw	r22, r12
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 668:	81 10       	cpse	r8, r1
 66a:	f5 cf       	rjmp	.-22     	; 0x656 <__EEPROM_REGION_LENGTH__+0x256>
 66c:	22 20       	and	r2, r2
 66e:	09 f4       	brne	.+2      	; 0x672 <__EEPROM_REGION_LENGTH__+0x272>
 670:	42 ce       	rjmp	.-892    	; 0x2f6 <vfprintf+0x24>
 672:	b6 01       	movw	r22, r12
 674:	80 e2       	ldi	r24, 0x20	; 32
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	0e 94 60 03 	call	0x6c0	; 0x6c0 <fputc>
 67c:	2a 94       	dec	r2
 67e:	f6 cf       	rjmp	.-20     	; 0x66c <__EEPROM_REGION_LENGTH__+0x26c>
 680:	f6 01       	movw	r30, r12
 682:	86 81       	ldd	r24, Z+6	; 0x06
 684:	97 81       	ldd	r25, Z+7	; 0x07
 686:	02 c0       	rjmp	.+4      	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
 688:	8f ef       	ldi	r24, 0xFF	; 255
 68a:	9f ef       	ldi	r25, 0xFF	; 255
 68c:	2b 96       	adiw	r28, 0x0b	; 11
 68e:	e2 e1       	ldi	r30, 0x12	; 18
 690:	0c 94 16 04 	jmp	0x82c	; 0x82c <__epilogue_restores__>

00000694 <strnlen_P>:
 694:	fc 01       	movw	r30, r24
 696:	05 90       	lpm	r0, Z+
 698:	61 50       	subi	r22, 0x01	; 1
 69a:	70 40       	sbci	r23, 0x00	; 0
 69c:	01 10       	cpse	r0, r1
 69e:	d8 f7       	brcc	.-10     	; 0x696 <strnlen_P+0x2>
 6a0:	80 95       	com	r24
 6a2:	90 95       	com	r25
 6a4:	8e 0f       	add	r24, r30
 6a6:	9f 1f       	adc	r25, r31
 6a8:	08 95       	ret

000006aa <strnlen>:
 6aa:	fc 01       	movw	r30, r24
 6ac:	61 50       	subi	r22, 0x01	; 1
 6ae:	70 40       	sbci	r23, 0x00	; 0
 6b0:	01 90       	ld	r0, Z+
 6b2:	01 10       	cpse	r0, r1
 6b4:	d8 f7       	brcc	.-10     	; 0x6ac <strnlen+0x2>
 6b6:	80 95       	com	r24
 6b8:	90 95       	com	r25
 6ba:	8e 0f       	add	r24, r30
 6bc:	9f 1f       	adc	r25, r31
 6be:	08 95       	ret

000006c0 <fputc>:
 6c0:	0f 93       	push	r16
 6c2:	1f 93       	push	r17
 6c4:	cf 93       	push	r28
 6c6:	df 93       	push	r29
 6c8:	fb 01       	movw	r30, r22
 6ca:	23 81       	ldd	r18, Z+3	; 0x03
 6cc:	21 fd       	sbrc	r18, 1
 6ce:	03 c0       	rjmp	.+6      	; 0x6d6 <fputc+0x16>
 6d0:	8f ef       	ldi	r24, 0xFF	; 255
 6d2:	9f ef       	ldi	r25, 0xFF	; 255
 6d4:	2c c0       	rjmp	.+88     	; 0x72e <fputc+0x6e>
 6d6:	22 ff       	sbrs	r18, 2
 6d8:	16 c0       	rjmp	.+44     	; 0x706 <fputc+0x46>
 6da:	46 81       	ldd	r20, Z+6	; 0x06
 6dc:	57 81       	ldd	r21, Z+7	; 0x07
 6de:	24 81       	ldd	r18, Z+4	; 0x04
 6e0:	35 81       	ldd	r19, Z+5	; 0x05
 6e2:	42 17       	cp	r20, r18
 6e4:	53 07       	cpc	r21, r19
 6e6:	44 f4       	brge	.+16     	; 0x6f8 <fputc+0x38>
 6e8:	a0 81       	ld	r26, Z
 6ea:	b1 81       	ldd	r27, Z+1	; 0x01
 6ec:	9d 01       	movw	r18, r26
 6ee:	2f 5f       	subi	r18, 0xFF	; 255
 6f0:	3f 4f       	sbci	r19, 0xFF	; 255
 6f2:	31 83       	std	Z+1, r19	; 0x01
 6f4:	20 83       	st	Z, r18
 6f6:	8c 93       	st	X, r24
 6f8:	26 81       	ldd	r18, Z+6	; 0x06
 6fa:	37 81       	ldd	r19, Z+7	; 0x07
 6fc:	2f 5f       	subi	r18, 0xFF	; 255
 6fe:	3f 4f       	sbci	r19, 0xFF	; 255
 700:	37 83       	std	Z+7, r19	; 0x07
 702:	26 83       	std	Z+6, r18	; 0x06
 704:	14 c0       	rjmp	.+40     	; 0x72e <fputc+0x6e>
 706:	8b 01       	movw	r16, r22
 708:	ec 01       	movw	r28, r24
 70a:	fb 01       	movw	r30, r22
 70c:	00 84       	ldd	r0, Z+8	; 0x08
 70e:	f1 85       	ldd	r31, Z+9	; 0x09
 710:	e0 2d       	mov	r30, r0
 712:	09 95       	icall
 714:	89 2b       	or	r24, r25
 716:	e1 f6       	brne	.-72     	; 0x6d0 <fputc+0x10>
 718:	d8 01       	movw	r26, r16
 71a:	16 96       	adiw	r26, 0x06	; 6
 71c:	8d 91       	ld	r24, X+
 71e:	9c 91       	ld	r25, X
 720:	17 97       	sbiw	r26, 0x07	; 7
 722:	01 96       	adiw	r24, 0x01	; 1
 724:	17 96       	adiw	r26, 0x07	; 7
 726:	9c 93       	st	X, r25
 728:	8e 93       	st	-X, r24
 72a:	16 97       	sbiw	r26, 0x06	; 6
 72c:	ce 01       	movw	r24, r28
 72e:	df 91       	pop	r29
 730:	cf 91       	pop	r28
 732:	1f 91       	pop	r17
 734:	0f 91       	pop	r16
 736:	08 95       	ret

00000738 <__ultoa_invert>:
 738:	fa 01       	movw	r30, r20
 73a:	aa 27       	eor	r26, r26
 73c:	28 30       	cpi	r18, 0x08	; 8
 73e:	51 f1       	breq	.+84     	; 0x794 <__ultoa_invert+0x5c>
 740:	20 31       	cpi	r18, 0x10	; 16
 742:	81 f1       	breq	.+96     	; 0x7a4 <__ultoa_invert+0x6c>
 744:	e8 94       	clt
 746:	6f 93       	push	r22
 748:	6e 7f       	andi	r22, 0xFE	; 254
 74a:	6e 5f       	subi	r22, 0xFE	; 254
 74c:	7f 4f       	sbci	r23, 0xFF	; 255
 74e:	8f 4f       	sbci	r24, 0xFF	; 255
 750:	9f 4f       	sbci	r25, 0xFF	; 255
 752:	af 4f       	sbci	r26, 0xFF	; 255
 754:	b1 e0       	ldi	r27, 0x01	; 1
 756:	3e d0       	rcall	.+124    	; 0x7d4 <__ultoa_invert+0x9c>
 758:	b4 e0       	ldi	r27, 0x04	; 4
 75a:	3c d0       	rcall	.+120    	; 0x7d4 <__ultoa_invert+0x9c>
 75c:	67 0f       	add	r22, r23
 75e:	78 1f       	adc	r23, r24
 760:	89 1f       	adc	r24, r25
 762:	9a 1f       	adc	r25, r26
 764:	a1 1d       	adc	r26, r1
 766:	68 0f       	add	r22, r24
 768:	79 1f       	adc	r23, r25
 76a:	8a 1f       	adc	r24, r26
 76c:	91 1d       	adc	r25, r1
 76e:	a1 1d       	adc	r26, r1
 770:	6a 0f       	add	r22, r26
 772:	71 1d       	adc	r23, r1
 774:	81 1d       	adc	r24, r1
 776:	91 1d       	adc	r25, r1
 778:	a1 1d       	adc	r26, r1
 77a:	20 d0       	rcall	.+64     	; 0x7bc <__ultoa_invert+0x84>
 77c:	09 f4       	brne	.+2      	; 0x780 <__ultoa_invert+0x48>
 77e:	68 94       	set
 780:	3f 91       	pop	r19
 782:	2a e0       	ldi	r18, 0x0A	; 10
 784:	26 9f       	mul	r18, r22
 786:	11 24       	eor	r1, r1
 788:	30 19       	sub	r19, r0
 78a:	30 5d       	subi	r19, 0xD0	; 208
 78c:	31 93       	st	Z+, r19
 78e:	de f6       	brtc	.-74     	; 0x746 <__ultoa_invert+0xe>
 790:	cf 01       	movw	r24, r30
 792:	08 95       	ret
 794:	46 2f       	mov	r20, r22
 796:	47 70       	andi	r20, 0x07	; 7
 798:	40 5d       	subi	r20, 0xD0	; 208
 79a:	41 93       	st	Z+, r20
 79c:	b3 e0       	ldi	r27, 0x03	; 3
 79e:	0f d0       	rcall	.+30     	; 0x7be <__ultoa_invert+0x86>
 7a0:	c9 f7       	brne	.-14     	; 0x794 <__ultoa_invert+0x5c>
 7a2:	f6 cf       	rjmp	.-20     	; 0x790 <__ultoa_invert+0x58>
 7a4:	46 2f       	mov	r20, r22
 7a6:	4f 70       	andi	r20, 0x0F	; 15
 7a8:	40 5d       	subi	r20, 0xD0	; 208
 7aa:	4a 33       	cpi	r20, 0x3A	; 58
 7ac:	18 f0       	brcs	.+6      	; 0x7b4 <__ultoa_invert+0x7c>
 7ae:	49 5d       	subi	r20, 0xD9	; 217
 7b0:	31 fd       	sbrc	r19, 1
 7b2:	40 52       	subi	r20, 0x20	; 32
 7b4:	41 93       	st	Z+, r20
 7b6:	02 d0       	rcall	.+4      	; 0x7bc <__ultoa_invert+0x84>
 7b8:	a9 f7       	brne	.-22     	; 0x7a4 <__ultoa_invert+0x6c>
 7ba:	ea cf       	rjmp	.-44     	; 0x790 <__ultoa_invert+0x58>
 7bc:	b4 e0       	ldi	r27, 0x04	; 4
 7be:	a6 95       	lsr	r26
 7c0:	97 95       	ror	r25
 7c2:	87 95       	ror	r24
 7c4:	77 95       	ror	r23
 7c6:	67 95       	ror	r22
 7c8:	ba 95       	dec	r27
 7ca:	c9 f7       	brne	.-14     	; 0x7be <__ultoa_invert+0x86>
 7cc:	00 97       	sbiw	r24, 0x00	; 0
 7ce:	61 05       	cpc	r22, r1
 7d0:	71 05       	cpc	r23, r1
 7d2:	08 95       	ret
 7d4:	9b 01       	movw	r18, r22
 7d6:	ac 01       	movw	r20, r24
 7d8:	0a 2e       	mov	r0, r26
 7da:	06 94       	lsr	r0
 7dc:	57 95       	ror	r21
 7de:	47 95       	ror	r20
 7e0:	37 95       	ror	r19
 7e2:	27 95       	ror	r18
 7e4:	ba 95       	dec	r27
 7e6:	c9 f7       	brne	.-14     	; 0x7da <__ultoa_invert+0xa2>
 7e8:	62 0f       	add	r22, r18
 7ea:	73 1f       	adc	r23, r19
 7ec:	84 1f       	adc	r24, r20
 7ee:	95 1f       	adc	r25, r21
 7f0:	a0 1d       	adc	r26, r0
 7f2:	08 95       	ret

000007f4 <__prologue_saves__>:
 7f4:	2f 92       	push	r2
 7f6:	3f 92       	push	r3
 7f8:	4f 92       	push	r4
 7fa:	5f 92       	push	r5
 7fc:	6f 92       	push	r6
 7fe:	7f 92       	push	r7
 800:	8f 92       	push	r8
 802:	9f 92       	push	r9
 804:	af 92       	push	r10
 806:	bf 92       	push	r11
 808:	cf 92       	push	r12
 80a:	df 92       	push	r13
 80c:	ef 92       	push	r14
 80e:	ff 92       	push	r15
 810:	0f 93       	push	r16
 812:	1f 93       	push	r17
 814:	cf 93       	push	r28
 816:	df 93       	push	r29
 818:	cd b7       	in	r28, 0x3d	; 61
 81a:	de b7       	in	r29, 0x3e	; 62
 81c:	ca 1b       	sub	r28, r26
 81e:	db 0b       	sbc	r29, r27
 820:	0f b6       	in	r0, 0x3f	; 63
 822:	f8 94       	cli
 824:	de bf       	out	0x3e, r29	; 62
 826:	0f be       	out	0x3f, r0	; 63
 828:	cd bf       	out	0x3d, r28	; 61
 82a:	09 94       	ijmp

0000082c <__epilogue_restores__>:
 82c:	2a 88       	ldd	r2, Y+18	; 0x12
 82e:	39 88       	ldd	r3, Y+17	; 0x11
 830:	48 88       	ldd	r4, Y+16	; 0x10
 832:	5f 84       	ldd	r5, Y+15	; 0x0f
 834:	6e 84       	ldd	r6, Y+14	; 0x0e
 836:	7d 84       	ldd	r7, Y+13	; 0x0d
 838:	8c 84       	ldd	r8, Y+12	; 0x0c
 83a:	9b 84       	ldd	r9, Y+11	; 0x0b
 83c:	aa 84       	ldd	r10, Y+10	; 0x0a
 83e:	b9 84       	ldd	r11, Y+9	; 0x09
 840:	c8 84       	ldd	r12, Y+8	; 0x08
 842:	df 80       	ldd	r13, Y+7	; 0x07
 844:	ee 80       	ldd	r14, Y+6	; 0x06
 846:	fd 80       	ldd	r15, Y+5	; 0x05
 848:	0c 81       	ldd	r16, Y+4	; 0x04
 84a:	1b 81       	ldd	r17, Y+3	; 0x03
 84c:	aa 81       	ldd	r26, Y+2	; 0x02
 84e:	b9 81       	ldd	r27, Y+1	; 0x01
 850:	ce 0f       	add	r28, r30
 852:	d1 1d       	adc	r29, r1
 854:	0f b6       	in	r0, 0x3f	; 63
 856:	f8 94       	cli
 858:	de bf       	out	0x3e, r29	; 62
 85a:	0f be       	out	0x3f, r0	; 63
 85c:	cd bf       	out	0x3d, r28	; 61
 85e:	ed 01       	movw	r28, r26
 860:	08 95       	ret

00000862 <_exit>:
 862:	f8 94       	cli

00000864 <__stop_program>:
 864:	ff cf       	rjmp	.-2      	; 0x864 <__stop_program>
